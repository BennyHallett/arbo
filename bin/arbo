#!/usr/bin/env ruby
require 'gli'
require 'arbo'
require 'arbo/init'
require 'arbo/crypto'

include GLI::App

program_desc 'Arbo - the command line password manager.'

version Arbo::VERSION

commands = {
  :init => InitCommand.new
}

#desc 'Describe some switch here'
#switch [:s,:switch]

desc 'The file in which to store the encrypted password db'
default_value "#{Dir.home}/.arbodb"
arg_name 'File'
flag [:f,:file]

desc 'Displays help'
arg_name 'command'
skips_pre
command :help do |c|
  c.action do |global_options,options,args|
    puts "help command ran"
  end
end

desc 'Describe init here'
arg_name 'Describe arguments to init here'
command :init do |c|
  c.action do |global_options,options,args|
    commands[:init].process global_options, options, args, @crypto
  end
end

desc 'Describe list here'
arg_name 'Describe arguments to list here'
command :list do |c|
  c.action do |global_options,options,args|
    puts "list command ran"
  end
end

desc 'Describe set here'
arg_name 'Describe arguments to set here'
command :set do |c|
  c.action do |global_options,options,args|
    puts "set command ran"
  end
end

desc 'Describe generate here'
arg_name 'Describe arguments to generate here'
command :generate do |c|
  c.action do |global_options,options,args|
    puts "generate command ran"
  end
end

desc 'Describe delete here'
arg_name 'Describe arguments to delete here'
command :delete do |c|
  c.action do |global_options,options,args|
    puts "delete command ran"
  end
end

desc 'Describe get here'
arg_name 'Describe arguments to get here'
command :get do |c|
  c.action do |global_options,options,args|
    puts "get command ran"
  end
end

pre do |global,command,options,args|
  puts 'Please enter your master password: '
  pw = gets
  @crypto = Crypto.new pw
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
