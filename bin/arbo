#!/usr/bin/env ruby
require 'gli'
require 'arbo'
require 'arbo/init'
require 'arbo/set'
require 'arbo/list'
require 'arbo/delete'
require 'arbo/generate'
require 'arbo/help'
require 'arbo/crypto'
require 'arbo/generator'

require 'io/console'

include GLI::App

program_desc 'Arbo - the command line password manager.'

version Arbo::VERSION

commands = {
  :init     => InitCommand.new,
  :set      => SetCommand.new,
  :list     => ListCommand.new,
  :delete   => DeleteCommand.new,
  :generate => GenerateCommand.new,
  :help     => HelpCommand.new
}

#desc 'Describe some switch here'
#switch [:s,:switch]

desc 'The file in which to store the encrypted password db'
default_value "#{Dir.home}/.arbodb"
arg_name 'File'
flag [:f,:file]

desc 'Displays help'
arg_name 'command'
skips_pre
command :help do |c|
  c.action do |global_options,options,args|
    puts commands[:help].process global_options, options, args
  end
end

desc 'Describe init here'
arg_name 'Describe arguments to init here'
command :init do |c|
  c.action do |global_options,options,args|
    commands[:init].process global_options, options, args, @crypto
  end
end

desc 'Describe list here'
arg_name 'Describe arguments to list here'
command :list do |c|
  c.action do |global_options,options,args|
    list = commands[:list].process global_options, options, args, @crypto
    
    $stdout.puts "The database file contains: \n\n"

    list.each do |i|
      $stdout.puts "* #{i}"
    end

    $stdout.puts "\n"
  end
end

desc 'Describe set here'
arg_name 'Describe arguments to set here'
command :set do |c|
  c.action do |global_options,options,args|
    commands[:set].process global_options, options, args, @crypto
  end
end

desc 'Describe generate here'
arg_name 'Describe arguments to generate here'
command :generate do |c|
  c.action do |global_options,options,args|
    generator = Generator.new
    commands[:generate].process global_options, options, args, @crypto, generator
  end
end

desc 'Describe delete here'
arg_name 'Describe arguments to delete here'
command :delete do |c|
  c.action do |global_options,options,args|
    commands[:delete].process global_options, options, args, @crypto
  end
end

desc 'Describe get here'
arg_name 'Describe arguments to get here'
command :get do |c|
  c.action do |global_options,options,args|
    puts "get command ran"
  end
end

pre do |global,command,options,args|
  puts 'Please enter your master password: '
  pw = $stdin.noecho(&:gets)
  @crypto = Crypto.new pw
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
